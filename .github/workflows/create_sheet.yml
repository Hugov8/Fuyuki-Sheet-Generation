name: Create sheet

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:
        inputs:
            mail:
              description: 'Mail avec lequel la sheet sera partag√©e'
              required: true
            id-war:
              description: 'ID de la war a cr√©er, visible sur atlas'
              required: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    runs-on: ubuntu-latest
    
    steps:
        - name: Checkout repository 
          uses: actions/checkout@v3
        
        - name: Executing remote command
          uses: appleboy/ssh-action@master
          env:
            API_KEY_RAYSHIFT: ${{ secrets.API_KEY_RAYSHIFT }}
            GHCR_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            host: ${{ secrets.HOST }}
            USERNAME: ${{ secrets.USERNAME }}
            PORT: ${{ secrets.PORT }}
            KEY: ${{ secrets.SSH_KEY }}
            passphrase: ${{ secrets.SSHKEY_PASSPHRASE }}
            envs: API_KEY_RAYSHIFT, GHCR_TOKEN
            script: |
                CONTAINER_NAME_UPPER=${{ github.event.repository.name }}
                CONTAINER_NAME=$(echo "$CONTAINER_NAME_UPPER" | tr '[:upper:]' '[:lower:]')

                USERNAME=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')

                # Nom de l'image Docker √† utiliser
                IMAGE_NAME_UPPER=ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:2.0
                IMAGE_NAME=$(echo "$IMAGE_NAME_UPPER" | tr '[:upper:]' '[:lower:]')

                echo "üîç V√©rification du container existant..."
                if [ "$(docker ps -aq -f name=^${CONTAINER_NAME}$)" ]; then
                echo "üõë $CONTAINER_NAME d√©j√† en cours, relancer lorsque la pr√©c√©dente g√©n√©ration est termin√©e"
                else
                echo "‚úÖ Aucun container existant avec ce nom."
                echo "üßπ Suppression du container $CONTAINER_NAME..."
                docker rm $CONTAINER_NAME
                docker rmi $IMAGE_NAME

                echo "Connexion au docker repo"
                echo $GHCR_TOKEN | docker login ghcr.io -u $USERNAME --password-stdin
                echo "üöÄ D√©marrage d'un nouveau container $CONTAINER_NAME..."
                docker run --rm -e API_KEY_RAYSHIFT=$API_KEY_RAYSHIFT -v logs_sheet_gen:/logs --name $CONTAINER_NAME  $IMAGE_NAME \
                CREATION ${{ github.event.inputs.id-war }} ${{ github.event.inputs.mail }}
                fi


